{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","currentYear","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","isExpanded","setExpanded","note","setNote","handleChange","event","target","name","value","prevNote","onChange","placeholder","rows","Zoom","in","Fab","onAdd","preventDefault","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","map","key","ReactDOM","render","document","getElementById"],"mappings":"+PAWeA,MARf,WACI,OAAO,gCACH,4BACA,kBAAC,IAAD,MADA,YCOOC,MAVf,WAEE,IAAMC,GAAc,IAAIC,MAAOC,cAC7B,OACE,gCACE,6CAAgBF,EAAhB,O,iBCYOG,MAhBf,SAAcC,GAMV,OAAS,yBAAKC,UAAW,QACrB,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QAPhB,WACIJ,EAAMK,SAASL,EAAMM,MAOb,kBAAC,IAAD,S,yCCmDGC,MA3Df,SAAoBP,GAEhB,MAAkCQ,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,mBAAS,CAC7BN,MAAO,GACPC,QAAS,KAFb,mBAAOQ,EAAP,KAAaC,EAAb,KAKA,SAASC,EAAaC,GAClB,MAAqBA,EAAMC,OAArBC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAEZL,GAAQ,SAAAM,GACJ,OAAO,2BACAA,GADP,IAEI,CAACF,GAAOC,OAkBpB,OACE,6BACE,0BAAMhB,UAAU,eACXQ,GAAc,2BAAOO,KAAK,QAC1BG,SAAUN,EACVI,MAAON,EAAKT,MACZkB,YAAY,UAGb,8BACIJ,KAAK,UACLZ,QAdZ,WACIM,GAAY,IAcJS,SAAUN,EACVI,MAAON,EAAKR,QACZiB,YAAY,iBACZC,KAAMZ,EAAa,EAAI,IAEvB,kBAACa,EAAA,EAAD,CAAMC,GAAId,GACV,kBAACe,EAAA,EAAD,CAAKpB,QA/BjB,SAAoBU,GAEhBd,EAAMyB,MAAMd,GACZC,EAAQ,CACJV,MAAM,GACNC,QAAQ,KAEZW,EAAMY,mBAyBM,kBAAC,IAAD,WCJLC,MA3Cf,WAEI,MAA0BnB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KAYA,SAASC,EAAWxB,GAChBuB,GAAS,SAAAE,GACN,OAAQA,EAAUC,QAAO,SAACC,EAAUC,GAC/B,OAAOA,IAAS5B,QAM5B,OACA,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CACAmB,MArBJ,SAAiBU,GACbN,GAAS,SAAAE,GACN,MAAM,GAAN,mBAAYA,GAAZ,CAAuBI,UAoBzBP,EAAMQ,KAAI,SAACH,EAAUC,GAClB,OAAO,kBAAC,EAAD,CACPG,IAAKH,EACL5B,GAAI4B,EACJhC,MAAO+B,EAAS/B,MAChBC,QAAS8B,EAAS9B,QAClBE,SAAUyB,OAGd,kBAAC,EAAD,QC1CRQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d8ac152a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport HighlightIcon from '@material-ui/icons/Highlight';\r\n\r\nfunction Header() {\r\n    return <header>\r\n        <h1>\r\n        <HighlightIcon />\r\n        Keeper</h1>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n\r\n  const currentYear = new Date().getFullYear();\r\n    return (\r\n      <footer>\r\n        <p>Copyright Â© {currentYear} </p>\r\n      </footer>\r\n);\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction Note(props) {\r\n\r\nfunction handleClick() {\r\n    props.onDelete(props.id);\r\n\r\n}\r\n    return ( <div className= \"note\">\r\n        <h1>{props.title}</h1>\r\n        <p>{props.content}</p>\r\n        <button onClick={handleClick}>\r\n            <DeleteIcon />\r\n        </button>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Note;","import React, { useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props) {\r\n\r\n    const [isExpanded, setExpanded] = useState(false);\r\n    const [note, setNote] = useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    function handleChange(event) {\r\n        const{name, value} = event.target;\r\n\r\n        setNote(prevNote => {\r\n            return {\r\n                ...prevNote,\r\n                [name]: value\r\n            };\r\n        });\r\n    }\r\n\r\n    function submitNote(event) {\r\n\r\n        props.onAdd(note);\r\n        setNote({\r\n            title:\"\",\r\n            content:\"\"\r\n        });\r\n        event.preventDefault();//it prevents from reloading page after hitting submit button\r\n    }\r\n\r\n    function expand() {\r\n        setExpanded(true);\r\n    }\r\n    return (\r\n      <div> \r\n        <form className=\"create-note\">\r\n            {isExpanded && <input name=\"title\"\r\n             onChange={handleChange}\r\n             value={note.title}\r\n             placeholder=\"Title\" \r\n\r\n               />}\r\n            <textarea\r\n                name=\"content\"\r\n                onClick={expand}\r\n                onChange={handleChange}\r\n                value={note.content}\r\n                placeholder=\"Take a note...\" \r\n                rows={isExpanded ? 3 : 1} \r\n                 />\r\n                <Zoom in={isExpanded}>\r\n                <Fab onClick={submitNote}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                </Zoom>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateArea;","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport CreateArea from \"./CreateArea\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    const [notes, setNotes] = useState([]);\r\n    \r\n    \r\n    \r\n    function addNote(newNote) {\r\n        setNotes(prevNotes => {\r\n           return  [...prevNotes, newNote];\r\n        });\r\n        \r\n\r\n    }\r\n\r\n    function deleteNote(id) {\r\n        setNotes(prevNotes => {\r\n           return  prevNotes.filter((noteItem, index) => {\r\n                return index !==id;\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    return ( \r\n    <div>\r\n        <Header />\r\n        <CreateArea\r\n        onAdd={addNote} />\r\n        {notes.map((noteItem, index) => {\r\n            return <Note\r\n            key={index}\r\n            id={index}\r\n            title={noteItem.title}\r\n            content={noteItem.content}\r\n            onDelete={deleteNote}\r\n            />\r\n        })}\r\n        <Footer />\r\n    </div>\r\n); \r\n}\r\n\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}